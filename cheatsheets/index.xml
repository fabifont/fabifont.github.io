<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cheatsheets on Fabio Fontana</title>
    <link>https://fabifont.github.io/cheatsheets/</link>
    <description>Recent content in Cheatsheets on Fabio Fontana</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 08 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://fabifont.github.io/cheatsheets/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Arch (btrfs &#43; luks &#43; systemd-boot) installation</title>
      <link>https://fabifont.github.io/cheatsheets/arch/</link>
      <pubDate>Sun, 08 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://fabifont.github.io/cheatsheets/arch/</guid>
      <description>THIS IS NOT A GUIDE. IT&amp;rsquo;S JUST A PERSONAL CHEATSHEET.YOU SHOULD FOLLOW THE ARCH WIKI.Check EFI mode # ls /sys/firmware/efi/efivars
General Configure time:
timedatectl set-ntp true
Partitioning We assume that we install Arch on /dev/nvme0n1.
# gdisk /dev/nvme0n1
Create a new partition table:
Command (? for help): o
Create an EFI partition (choose size 550M and hex code EF00):
Command (? for help): n
Create a root partition (adopt the default values):</description>
    </item>
    
    <item>
      <title>Download packages with systemd-timer</title>
      <link>https://fabifont.github.io/cheatsheets/download/</link>
      <pubDate>Tue, 29 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://fabifont.github.io/cheatsheets/download/</guid>
      <description>download.service (/etc/systemd/system/download.service) [Unit] Description=Download packages Wants=network-online.target After=network-online.target [Service] User=root Type=oneshot ExecStart=/bin/pacman -Syuw --noconfirm [Install] WantedBy=multi-user.target download.timer (/etc/systemd/system/download.timer) [Unit] Description=Run download.service hourly and on boot Requires=download.service [Timer] Unit=download.service OnBootSec=10s OnUnitActiveSec=1h [Install] WantedBy=timers.target Reload daemons and enable/start the timer  systemctl daemon-reload systemctl enable download.timer systemctl start download.timer  </description>
    </item>
    
    <item>
      <title>Links</title>
      <link>https://fabifont.github.io/cheatsheets/links/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://fabifont.github.io/cheatsheets/links/</guid>
      <description>Economy and investments  FIRE: Financial Indipendence and Early Retirement MMM: Mr. Money Mustache  Computer science  Stanford Engineering Everywhere MIT OpenCourseWare Coding Interview University Open Source Society University Awesome CS Courses Everything Computer Science Papers we love From @rcastellotti:  The Missing Semester of Your CS Education    Programming  FreeCodeCamp:  Website Youtube Github   Free Programming Books Awesome cheatsheets Codecademy  Webdev  From @rcastellotti:  A collection of free single-purpose online tools for web developers    </description>
    </item>
    
    <item>
      <title>Git</title>
      <link>https://fabifont.github.io/cheatsheets/git/</link>
      <pubDate>Thu, 27 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://fabifont.github.io/cheatsheets/git/</guid>
      <description>Clean history Without submodules  cd repo rm -rf .git git init -b master git add . git commit -m &amp;quot;Initial commit&amp;quot; git remote add origin git@github.com:&amp;lt;YOUR ACCOUNT&amp;gt;/&amp;lt;YOUR REPO&amp;gt;.git git push -u --force origin master  With submodules  git checkout --orphan newBranch git add -A add all files and commit them git commit git branch -D master delete the master branch git branch -m master rename the current branch to master git push -f origin master force push master branch git gc --aggressive --prune=all remove the old files  Untrack files already added to git repository based on .</description>
    </item>
    
    <item>
      <title>Packages</title>
      <link>https://fabifont.github.io/cheatsheets/packages/</link>
      <pubDate>Thu, 27 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://fabifont.github.io/cheatsheets/packages/</guid>
      <description>Minimal (post DE installation) code firefox gnome-keyring htop inkscape latexdraw latex-mathabx latex-pgfplots neofetch okular qemu simplescreenrecorder spectacle telegram-desktop texlive-bibtexextra texlive-fontsextra texlive-latexextra texlive-science
Full ark base bashtop bitwarden-bin bluedevil bluez-utils breeze-gtk clang cmatrix code dhcpcd discord discover dolphin dpkg drkonqi firefox geckodriver gnome-keyring gotop-bin gparted handbrake heroku-cli htop inkscape intel-ucode iwd kate kcalc kdeconnect kde-gtk-config kdenlive kdeplasma-addons kgamma5 khotkeys kinfocenter konsole kscreen ksshaskpass ktorrent kwallet-pam kwayland-integration kwrited latexdraw latex-mathabx latex-pgfplots lib32-gcc-libs liburcu libvncserver linux linux-firmware lsd lsof man-db man-pages minted mongodb-bin mongodb-compass mumble nano neofetch nerd-fonts-complete nnn okular olive openresolv oxygen pavucontrol peek pinta plasma5-applets-virtual-desktop-bar-git plasma-browser-integration plasma-desktop plasma-nm plasma-pa plasma-sdk plasma-thunderbolt plasma-vault plasma-workspace-wallpapers powerdevil pulseaudio-alsa pulseaudio-bluetooth python-pip python-pywal python-selenium python-telethon qemu reflector remmina rhino screenfetch sddm-kcm simplescreenrecorder spectacle speedtest-cli spotify teams teamviewer telegram-desktop termdown texlive-bibtexextra texlive-fontsextra texlive-kbordermatrix texlive-science tigervnc ttf-meslo ttf-roboto-mono typora ufetch-git user-manager vlc webcamoid wget whatsapp-nativefier wireguard-tools xdg-desktop-portal-kde yay zsh-autosuggestions zsh-completions zsh-syntax-highlighting zsh-theme-powerlevel10k </description>
    </item>
    
  </channel>
</rss>
